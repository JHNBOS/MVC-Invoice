@using System.Diagnostics
@using InvoiceApplication.Data
@inject ApplicationDbContext _context

@{
    ViewData["Title"] = "Home Page";

    User user = null;
    if (SessionHelper.IsExists(Context.Session, "User"))
    {
        user = (User)Context.Session.Get<User>("User");
    }

    AppSettings settings = null;
    if (SessionHelper.IsExists(Context.Session, "Settings"))
    {
        Debug.WriteLine("Settings exists");
        settings = SessionHelper.Get<AppSettings>(Context.Session, "Settings");
    }

    if (!SessionHelper.IsExists(Context.Session, "Settings"))
    {
        settings = _context.Settings.Single(s => s.ID == 1);
        SessionHelper.Set(Context.Session, "Settings", settings);
    }

    var count = ViewBag.invoiceList.Count;

}

@section HEAD{
    <!-- amCharts javascript code -->
    <script type="text/javascript" src="http://www.amcharts.com/lib/3/amcharts.js"></script>
    <script type="text/javascript" src="http://www.amcharts.com/lib/3/pie.js"></script>
    <script type="text/javascript" src="http://cdn.amcharts.com/lib/3/gauge.js"></script>
    <script type="text/javascript" src="http://www.amcharts.com/lib/3/serial.js"></script>
    <script type="text/javascript" src="http://www.amcharts.com/lib/3/themes/light.js"></script>
    <script type="text/javascript" src="http://www.amcharts.com/lib/3/themes/dark.js"></script>
    <script type="text/javascript" src="http://www.amcharts.com/lib/3/themes/black.js"></script>
    <script src="https://www.amcharts.com/lib/3/plugins/export/export.js" type="text/javascript"></script>
    <link href="https://www.amcharts.com/lib/3/plugins/export/export.css" rel="stylesheet" type="text/css">
}

<!-- Top Row -->
<div class="row">
    <div class="col-md-3"></div>
    <div class="col-md-6 text-center">
        @if (user != null)
        {
            <h2>Welcome, @user.FirstName</h2>
        }
        else
        {
            <h2>Welcome</h2>
        }
    </div>
    <div class="col-md-3"></div>
</div>

<br />
<br />

<!-- Middle Row -->
<div class="row">
    <div class="col-sm-2"></div>
    <div class="col-sm-8">
        <h4 id="invoiceText" class="text-center"></h4>
    </div>
    <div class="col-sm-2"></div>
</div>

<br />
<br />

@if (user != null && user.AccountType == "Client")
{
    <!-- Bottom Row Client -->
    <div class="row">
        <div class="col-sm-3"></div>
        <div class="col-sm-6 text-center">
            <div id="chartdiv" style="width:100%;height:400px;background-color:#d3d3d3;display:none;"></div>
        </div>
        <div class="col-sm-3"></div>
    </div>
}


@if (user != null && user.AccountType == "Admin")
{
    <!-- Bottom Row Admin -->
    <div class="row">
        <div class="col-sm-1"></div>
        <div class="col-sm-5 text-center">
            <div id="admin_chartdiv" style="width:100%;height:400px;background-color:#d3d3d3;display:none;"></div>
        </div>
        <div class="col-sm-5">
            <div id="admin_chartdiv2" style="width:100%;height:400px;background-color:#d3d3d3;display:none;"></div>
        </div>
        <div class="col-sm-1"></div>
    </div>
}


@section Scripts{
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}

    <script>
        $(document).ready(function () {
            var current = null;
            var account = null;

            @if (user != null)
            {
                <text>
                    current = "@user.Email";
                    account = "@user.AccountType";
                </text>
            }

            if (current != "" && account == "Client")
            {
                setText();
                $("#chartdiv").show();
                showClientChart();
            }

            if (current != "" && account == "Admin")
            {
                $("#admin_chartdiv").show();
                $("#admin_chartdiv2").show();
                showAdminChart();
            }

            if (current == "" || current == null) {
                var noUserText = "With this application it is possible to view and pay your invoices"
                            + "<br /><br />"
                            + "To use this website, you must login using the credentials sent to you by @settings.CompanyName.";
                $("#invoiceText").html(noUserText);
            }

        });

        function setText(){
            //Set text according to items inside invoices
            @if (user != null && user.AccountType == "Client" && (count == 0 || ViewBag.invoiceList == null))
            {
                <text>
                    $("#invoiceText").html("There are no unpaid invoices found at the moment.");
                </text>
            }

            //Set text according to items inside invoices
            @if (user != null && user.AccountType == "Client" && count == 1)
            {
                <text>
                    $("#invoiceText").html("You have 1 unpaid invoice." + "<br />" + "To be paid: &euro; @(ViewBag.total)");
                </text>
            }

            //Set text according to items inside invoices
            @if (user != null && user.AccountType == "Client" && count > 1)
            {
                <text>
                    $("#invoiceText").html("You have @(count) unpaid invoices." + "<br />" + "To be paid: &euro;  @(ViewBag.total)");
                </text>
            }
        };


        /* BEGIN OF SCRIPT FOR CHART */
        function showClientChart(){

            var paidArray = @(ViewBag.paid);
            var unpaidArray = @(ViewBag.unpaid);

            AmCharts.makeChart("chartdiv",
                    {
                        "type": "pie",
                        "balloonText": "[[title]]<br><span style='font-size:14px'><b>[[value]]</b> ([[percents]]%)</span>",
                        "innerRadius": 0,
                        "labelRadius": 21,
                        "startDuration": 4,
                        "radius": 100,
                        "baseColor": "#0063D3",
                        "hoverAlpha": 0.62,
                        "outlineThickness": 0,
                        "titleField": "category",
                        "valueField": "column-1",
                        "decimalSeparator": ",",
                        "percentPrecision": 1,
                        "theme": "light",
                        "thousandsSeparator": ".",
                        "allLabels": [],
                        "creditsPosition": "bottom-right",
                        "showEntries": true,
                        "balloon": {},
                        "legend": {
                            "enabled": true,
                            "align": "center",
                            "markerType": "circle"
                        },
                        "titles": [],
                        "dataProvider": [
                            {
                                "category": "Paid",
                                "column-1": paidArray
                            },
                            {
                                "category": "Unpaid",
                                "column-1": unpaidArray
                            }
                        ]
                });
        }

        function showAdminChart() {

            var total = @(ViewBag.totalPercentage);
            var paidCount = @(ViewBag.totalPaidCount);
            var unpaidCount = @(ViewBag.totalUnPaidCount);

            totalPaid = @(ViewBag.totalPaid);
            totalAmount = @(ViewBag.totalAmount);

            var totalAmountFormatted = AmCharts.formatNumber(totalAmount, {
                precision: -1,
                decimalSeparator: ",",
                thousandsSeparator: "."
            }, 2);

            AmCharts.makeChart("admin_chartdiv",
                {
                    "type": "serial",
                    "categoryField": "category",
                    "decimalSeparator": ",",
                    "thousandsSeparator": ".",
                    "rotate": true,
                    "startDuration": 3,
                    "creditsPosition": "bottom-left",
                    "theme": "light",
                    "precision": 2,
                    "usePrefixes": false,
                    "categoryAxis": {
                        "autoRotateCount": 0,
                        "gridPosition": "start",
                        "autoGridCount": false,
                        "labelsEnabled": false,
                        "title": "Currently Paid",
                        "size": 10
                    },
                    "trendLines": [],
                    "graphs": [
                        {
                            "fillAlphas": 1,
                            "id": "AmGraph-1",
                            "title": "graph 1",
                            "precision": 2,
                            "type": "column",
                            "valueField": "graph 1",
                            "balloonText": "Currently Paid: €[[graph 1]]",
                            "balloonFunction": function (item, graph) {
                                var result = graph.balloonText;
                                for (var key in item.dataContext) {
                                    if (item.dataContext.hasOwnProperty(key) && !isNaN(item.dataContext[key])) {
                                        var formatted = AmCharts.formatNumber(item.dataContext[key], {
                                            precision: -1,
                                            decimalSeparator: ",",
                                            thousandsSeparator: "."
                                        }, 2);
                                        result = result.replace("[[" + key + "]]", formatted);
                                    }
                                }
                                return result;
                            },
                        }
                    ],
                    "guides": [
                        {
                            "above": true,
                            "balloonText": "Total Amount: €" + totalAmountFormatted,
                            "position": "top",
                            "boldLabel": true,
                            "angle": 0,
                            "dashLength": 0,
                            "id": "Guide-1",
                            "inside": true,
                            "label": "Total Amount",
                            "labelRotation": 90,
                            "lineAlpha": 1,
                            "lineColor": "#FFFF00",
                            "lineThickness": 3,
                            "value": totalAmount
                        }
                    ],
                    "valueAxes": [
                        {
                            "id": "ValueAxis-1",
                            "maximum": totalAmount,
                            "minimum": (totalPaid - (totalPaid / 3)),
                            "precision": 2,
                            "unit": "€",
                            "labelsEnabled": false,
                            "unitPosition": "left",
                            "title": "",
                            "titleBold": false
                        }
                    ],
                    "allLabels": [],
                    "balloon": {},
                    "titles": [
                        {
                            "id": "Title-1",
                            "size": 10,
                            "text": "Current amount of paid invoices"
                        }
                    ],
                    "dataProvider": [
                        {
                            "category": "category 1",
                            "graph 1": totalPaid
                        }
                    ]
                }
            );

            AmCharts.makeChart("admin_chartdiv2",
                {
                    "type": "pie",
                    "balloonText": "[[title]]<br><span style='font-size:14px'><b>[[value]]</b> ([[percents]]%)</span>",
                    "innerRadius": 3,
                    "labelRadius": 16,
                    "radius": 90,
                    "maxLabelWidth": 198,
                    "pullOutDuration": 2,
                    "pullOutEffect": "elastic",
                    "startDuration": 2,
                    "startEffect": "easeOutSine",
                    "titleField": "category",
                    "valueField": "column-1",
                    "creditsPosition": "bottom-right",
                    "theme": "light",
                    "allLabels": [],
                    "balloon": {},
                    "legend": {
                        "enabled": true,
                        "align": "center",
                        "markerType": "circle",
                    },
                    "titles": [
                        {
                            "id": "Title-1",
                            "size": 10,
                            "text": "Percentages of paid/unpaid invoices"
                        }
                    ],
                    "dataProvider": [
                        {
                            "category": "Paid",
                            "column-1": paidCount
                        },
                        {
                            "category": "Unpaid",
                            "column-1": unpaidCount
                        }
                    ]
                });

        }



    </script>
}